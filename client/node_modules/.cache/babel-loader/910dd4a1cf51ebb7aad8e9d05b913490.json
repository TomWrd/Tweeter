{"ast":null,"code":"import _regeneratorRuntime from\"/Users/macbook/Desktop/tweeter/Tweeter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/macbook/Desktop/tweeter/Tweeter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/macbook/Desktop/tweeter/Tweeter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useSelector,useDispatch}from'react-redux';import'./TweetInput.css';import{makeStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import Button from'@material-ui/core/Button';import{GrClose}from'react-icons/gr';import{BsImage}from'react-icons/bs';import{FaUpload}from'react-icons/fa';import*as actions from'../../store/actions/twittercard';import axios from'axios';import Dropzone from'react-dropzone';import{BounceLoader}from'react-spinners';import{Observable}from'rxjs';var TweetInput=function TweetInput(props){var dispatch=useDispatch();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),tweetText=_useState2[0],setTweetText=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),tweetImage=_useState4[0],setTweetImage=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),imageUploading=_useState6[0],setImageUploading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),displayUploader=_useState8[0],setDisplayUploader=_useState8[1];var formData=new FormData();var submitTweet=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var cardDetails;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:cardDetails={text:tweetText,attachment:tweetImage};_context.next=3;return dispatch(actions.createTweet(cardDetails));case 3:setTweetText(\"\");setTweetImage();setDisplayUploader(false);case 6:case\"end\":return _context.stop();}}},_callee);}));return function submitTweet(){return _ref.apply(this,arguments);};}();var handleTextChange=function handleTextChange(text){setTweetText(text.substring(0,279));};var observable$=new Observable(function(subscriber){console.log(\"Posting form data: \"+JSON.stringify(formData));axios.post('/UploadImage',formData).then(function(response){subscriber.next(response.data.file);subscriber.complete();});});var handleUploadImage=function handleUploadImage(acceptedFiles){var file=acceptedFiles[0];var fd=new FormData();fd.append('tweetImage',file);formData=fd;setImageUploading(true);observable$.subscribe({next:function next(x){setTweetImage(x);console.log('Responded with:  '+x);},error:function error(err){console.error('something wrong occurred: '+err);},complete:function complete(){console.log('done');}});setImageUploading(false);};var charactersRemaining=280-tweetText.length;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-wrapper\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"input-wrapper\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TextField,{multiline:true,value:tweetText,rows:6,placeholder:\"What's happening?\",onChange:function onChange(text){return handleTextChange(text.target.value);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"options-wrapper\"},/*#__PURE__*/React.createElement(BsImage,{className:\"options-icon\",onClick:function onClick(){return setDisplayUploader(!displayUploader);}}),/*#__PURE__*/React.createElement(\"div\",{className:\"submit-tweet-wrapper\"},/*#__PURE__*/React.createElement(\"span\",{className:\"characters-remaining-wrapper\"},charactersRemaining),/*#__PURE__*/React.createElement(Button,{onClick:submitTweet,className:\"actions-icon\",variant:\"contained\",color:\"primary\"},\"Tweet\"))),displayUploader&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Dropzone,{onDrop:function onDrop(acceptedFiles){return handleUploadImage(acceptedFiles);},accept:[\"image/jpeg\",\"image/png\",\"image/jpg\"]},function(_ref2){var getRootProps=_ref2.getRootProps,getInputProps=_ref2.getInputProps;return/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",getRootProps(),imageUploading&&/*#__PURE__*/React.createElement(\"div\",{className:\"loader-container\"},/*#__PURE__*/React.createElement(BounceLoader,null)),!imageUploading&&tweetImage&&/*#__PURE__*/React.createElement(\"img\",{src:tweetImage,className:\"attachment-image\"}),!imageUploading&&!tweetImage&&/*#__PURE__*/React.createElement(FaUpload,null),/*#__PURE__*/React.createElement(\"input\",getInputProps()),/*#__PURE__*/React.createElement(\"p\",null,\"Drag 'n' drop the attachment here, or click the icon.\")));}))));};export default TweetInput;","map":{"version":3,"sources":["/Users/macbook/Desktop/tweeter/Tweeter/client/src/components/TweetInput/TweetInput.js"],"names":["React","useEffect","useState","useSelector","useDispatch","makeStyles","TextField","Button","GrClose","BsImage","FaUpload","actions","axios","Dropzone","BounceLoader","Observable","TweetInput","props","dispatch","tweetText","setTweetText","tweetImage","setTweetImage","imageUploading","setImageUploading","displayUploader","setDisplayUploader","formData","FormData","submitTweet","cardDetails","text","attachment","createTweet","handleTextChange","substring","observable$","subscriber","console","log","JSON","stringify","post","then","response","next","data","file","complete","handleUploadImage","acceptedFiles","fd","append","subscribe","x","error","err","charactersRemaining","length","target","value","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './TweetInput.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {GrClose} from 'react-icons/gr';\nimport {BsImage} from 'react-icons/bs';\nimport {FaUpload} from 'react-icons/fa';\nimport * as actions from '../../store/actions/twittercard';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone'\nimport {BounceLoader} from 'react-spinners';\nimport { Observable } from 'rxjs';\n \n \nconst TweetInput = (props) => {\n    const dispatch = useDispatch();\n    const [tweetText, setTweetText] = useState(\"\");\n    const [tweetImage, setTweetImage] = useState();\n    const [imageUploading, setImageUploading] = useState(false);\n    const [displayUploader, setDisplayUploader] = useState(false);\n    var formData = new FormData();\n    \n    const submitTweet = async () => {\n        var cardDetails = {\n            text: tweetText,\n            attachment: tweetImage\n        }\n        await dispatch(actions.createTweet(cardDetails));                \n        setTweetText(\"\");\n        setTweetImage();\n        setDisplayUploader(false);\n    }\n\n    const handleTextChange = (text) => {\n        setTweetText(text.substring(0,279));\n    }\n\n    const observable$ = new Observable(subscriber => {\n        console.log(\"Posting form data: \" + JSON.stringify(formData));\n        axios.post('/UploadImage', formData)\n        .then(response => {\n            subscriber.next(response.data.file);\n            subscriber.complete();\n        })\n      });\n\n    const handleUploadImage = (acceptedFiles) => {\n        var file = acceptedFiles[0];\n\n        var fd = new FormData();            \n        fd.append('tweetImage', file);\n        formData = fd;\n        setImageUploading(true);\n        observable$.subscribe({\n            next(x) { setTweetImage(x); console.log('Responded with:  ' + x); },\n            error(err) { console.error('something wrong occurred: ' + err); },\n            complete() { console.log('done'); }\n          });\n        setImageUploading(false);\n    }\n    \n    var charactersRemaining = 280 - tweetText.length;\n\n    return (\n        <div>\n            <div className=\"actions-wrapper\">\n            </div>\n            <div>\n                <div className=\"input-wrapper\">\n                    <div>\n                    <TextField \n                        multiline\n                        value={tweetText}\n                        rows={6}\n                        placeholder={\"What's happening?\"}\n                        onChange={(text) => handleTextChange(text.target.value)}\n                    />\n                    </div>\n                </div>                \n                <div className=\"options-wrapper\">\n                    <BsImage \n                        className=\"options-icon\"\n                        onClick={() => setDisplayUploader( ! displayUploader )}\n                    />\n                    {\n                        //Add image attachment option\n                    }\n                    <div className=\"submit-tweet-wrapper\">\n                    <span className=\"characters-remaining-wrapper\">{charactersRemaining}</span>\n                        <Button \n                            onClick={submitTweet}\n                            className=\"actions-icon\"\n                            variant=\"contained\"\n                            color=\"primary\"\n\n                        >\n                            Tweet\n                        </Button>\n                    </div>\n                </div>\n                {\n                    displayUploader && \n                    <div>\n                            <Dropzone onDrop={acceptedFiles => handleUploadImage(acceptedFiles)} accept={[\"image/jpeg\", \"image/png\",  \"image/jpg\"]}>\n                                {({getRootProps, getInputProps}) => (\n                                    <section>\n                                    <div {...getRootProps()}>\n                                        {\n                                            imageUploading && \n                                            <div className=\"loader-container\">\n                                                <BounceLoader/>\n                                            </div>\n                                        }\n                                        {\n                                            !imageUploading && tweetImage && \n                                            <img src={tweetImage} className=\"attachment-image\"></img>\n                                        }\n                                        {    !imageUploading && ! tweetImage &&\n                                            <FaUpload />\n                                        }\n                                        <input {...getInputProps()} />\n                                        <p>Drag 'n' drop the attachment here, or click the icon.</p>\n                                    </div>\n                                    </section>\n                                )}\n                                </Dropzone>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\nexport default TweetInput;"]},"metadata":{},"sourceType":"module"}